{"version":3,"sources":["unrest.js","ng-unrest.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","this","_callbacks","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","len","listeners","hasListeners",2,"arr","initial","idx","curr",3,"noop","isHost","str","toString","isObject","Object","serialize","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","encodeURIComponent","parseString","parts","pair","split","decodeURIComponent","parseHeader","index","line","field","lines","fields","pop","indexOf","toLowerCase","trim","type","shift","params","reduce","Response","req","options","xhr","text","method","responseType","responseText","statusText","setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","body","parseBody","response","Request","url","_query","_header","err","res","parse","original","callback","new_err","request","end","del","root","window","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","get","ct","statusCode","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","use","timeout","ms","_timeout","clearTimeout","_timer","abort","aborted","set","unset","getHeader","_parser","accept","auth","user","pass","btoa","query","name","_formData","FormData","append","attach","file","filename","send","data","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","loaded","onprogress","upload","setTimeout","open","contentType","setRequestHeader","then","fulfill","reject","head","patch","post","put","emitter",4,"_classCallCheck","instance","Constructor","TypeError","Table","Database","match","cacheTTL","cacheByDefault","storage","localStorage","plugins","_database","table","plugin","./table",5,"global","Unrest","superagent","./database",6,"jsonify","agent","handleResponses","CACHE_KEY","storageProvider","cache","getItem","time","Date","onSuccess","removeItem","onError","setItem","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","value","lifetime","id","Id",7,"database","events","fetch","object","save","remove","./request","angular","provider","uri","config","configure","path","configuration","$get"],"mappings":"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","file":"ng-unrest.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n},{}],2:[function(require,module,exports){\n\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n},{}],3:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nRequest.prototype.parse = function(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n},{\"emitter\":1,\"reduce\":2}],4:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global localStorage */\nvar Table = require('./table');\n\nmodule.exports = function Database(name, options) {\n  _classCallCheck(this, Database);\n\n  this.url = name || '/api/';\n  if (!this.url.match(/\\/$/)) {\n    this.url += '/';\n  }\n\n  options = options | {};\n  this.cacheTTL = options.cacheTTL || 10 * 60 * 1000; // 10 minutes\n  this.cacheByDefault = options.cacheByDefault || false;\n  this.storage = options.storage || localStorage;\n  this.plugins = options.plugins || [];\n\n  var self = this;\n  var _database = function _database(table) {\n    return new Table(self, table);\n  };\n  // `public` functions\n  this.plugins.forEach(function (plugin) {\n    plugin.call(self);\n  });\n\n  return _database;\n};\n\n},{\"./table\":7}],5:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// The Export Module\nglobal.Unrest = require('./database');\nglobal.Unrest.superagent = require('superagent');\n\nmodule.exports = global.Unrest;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./database\":4,\"superagent\":3}],6:[function(require,module,exports){\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar xhr = require('superagent');\n\nfunction jsonify(agent) {\n  return agent.type('application/json').accept('json');\n}\n\nfunction handleResponses(request) {\n  request.status = 'pending';\n  var method = request.agent.method;\n  var url = request.agent.url;\n  var CACHE_KEY = 'unrest-' + method + '-' + url;\n  var storageProvider = request.table._database.storage;\n\n  // //\n  // Perform Cache\n  if (request.cache) {\n    var cache = JSON.parse(storageProvider.getItem(CACHE_KEY));\n\n    if (cache) {\n      // if the cache exists and isn't old\n      if (cache.time && cache.time > +new Date() - request.cache) {\n        request.onSuccess.forEach(function (cb) {\n          cb(cache.data, true);\n        });\n      } else {\n        storageProvider.removeItem(CACHE_KEY);\n      }\n    }\n  }\n\n  // //\n  // Handle Response\n  request.agent.end(function (err, res) {\n    request.status = 'resolved';\n    if (err) {\n      // on error\n      request.error = err;\n      request.onError.forEach(function (cb) {\n        cb(err);\n      });\n    } else {\n      // on success\n      request.data = res.body;\n      if (request.cache) {\n        storageProvider.setItem(CACHE_KEY, JSON.stringify({ time: +new Date(), data: request.data }));\n      }\n      request.onSuccess.forEach(function (cb) {\n        cb(res.body);\n      });\n    }\n  });\n}\n\nmodule.exports = (function () {\n  function Request(table) {\n    _classCallCheck(this, Request);\n\n    this.table = table;\n    this.status = 'idle';\n    this.onSuccess = [];\n    this.onError = [];\n    if (this.table._database.cacheByDefault) {\n      this.cache = this.table._database.cacheTTL;\n    }\n  }\n\n  _createClass(Request, [{\n    key: 'cacheable',\n    value: function cacheable(lifetime) {\n      if (!lifetime) {\n        lifetime = this.table._database.cacheTTL;\n      }\n      this.cache = lifetime;\n      return this;\n    }\n\n    // QUERY GET /table/\n    // Returns a list.\n\n  }, {\n    key: 'query',\n    value: function query(options) {\n      this.agent = xhr.get(this.table.url).query(options);\n      jsonify(this.agent);\n      return this;\n    }\n  }, {\n    key: 'fetch',\n    value: function fetch(id, options) {\n      this.agent = xhr.get(this.table.url + '/' + id.toString()).query(options);\n      jsonify(this.agent);\n      return this;\n    }\n  }, {\n    key: 'save',\n    value: function save(obj) {\n      var r = null;\n      if (!obj.Id || obj.Id === 0) {\n        r = xhr.post(this.table.url);\n      } else {\n        r = xhr.put(this.table.url + '/' + obj.Id);\n      }\n      this.agent = r.send(obj);\n      jsonify(this.agent);\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(Id) {\n      this.agent = xhr.del(this.table.url + '/' + Id);\n      jsonify(this.agent);\n      return this;\n    }\n  }, {\n    key: 'then',\n    value: function then(cb) {\n      if (this.status === 'resolved' && !this.error) {\n        cb(this.data);\n      } else {\n        this.onSuccess.push(cb);\n      }\n      if (this.status === 'idle') handleResponses(this);\n      return this;\n    }\n  }, {\n    key: 'catch',\n    value: function _catch(cb) {\n      if (this.status === 'resolved' && this.error) {\n        cb(this.error);\n      } else {\n        this.onError.push(cb);\n      }\n      if (this.status === 'idle') handleResponses(this);\n      return this;\n    }\n  }]);\n\n  return Request;\n})();\n\n},{\"superagent\":3}],7:[function(require,module,exports){\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Request = require('./request');\n\nmodule.exports = (function () {\n  function Table(database, table) {\n    _classCallCheck(this, Table);\n\n    this._database = database;\n    this.url = database.url + table;\n    this.name = table;\n    this.events = {};\n  }\n\n  _createClass(Table, [{\n    key: 'query',\n    value: function query(options) {\n      return new Request(this).query(options);\n    }\n  }, {\n    key: 'fetch',\n    value: function fetch(id) {\n      return new Request(this).fetch(id);\n    }\n  }, {\n    key: 'save',\n    value: function save(object) {\n      return new Request(this).save(object);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(obj) {\n      return new Request(this).remove(obj);\n    }\n  }]);\n\n  return Table;\n})();\n\n},{\"./request\":6}]},{},[5])\n\n","angular\r\n.module('ngUnrest', [])\r\n.provider('unrest', function unrestProvider() {\r\n  var uri = '/api/';\r\n  var config = {\r\n    cacheTTL: 10 * 60 * 1000, // 10 minutes\r\n    cacheByDefault: false,\r\n    storage: localStorage\r\n  };\r\n  this.configure = function(path, configuration) {\r\n    uri = path;\r\n    config = configuration;\r\n  };\r\n  this.$get = [function unrestFactory() {\r\n    // let's assume that the UnicornLauncher constructor was also changed to\r\n    // accept and use the useTinfoilShielding argument\r\n    return new Unrest(uri, config);\r\n  }];\r\n  // var uri = '/api/';\r\n  // var config = {\r\n  //   cacheTTL: 10 * 60 * 1000, // 10 minutes\r\n  //   cacheByDefault: false,\r\n  //   storage: localStorage\r\n  // };\r\n  // var self = new Unrest(uri,config);\r\n  // Unrest.config = function(uri,config){\r\n  //   self = new Unrest(uri,config);\r\n  // }\r\n  // return self;\r\n});\r\n"],"sourceRoot":"/source/"}